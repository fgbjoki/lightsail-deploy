name: Deploy to Lightsail

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet packages
        run: dotnet restore ./src/Weather/Weather.sln

      - name: Build .NET application
        run: dotnet build ./src/Weather/Weather.sln --configuration Release --no-restore
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      - name: Install Lightsail Control (lightsailctl) plugin
        run: |
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv lightsailctl /usr/local/bin/
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Build, tag, and push Docker image
        id: build-image
        run: |
          IMAGE_TAG=latest
          docker build -t weather-api:$IMAGE_TAG ./src/Weather/
          aws lightsail push-container-image --region eu-central-1 --service-name container-service-1 --label weather-api --image weather-api:$IMAGE_TAG
        env:
          AWS_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        
